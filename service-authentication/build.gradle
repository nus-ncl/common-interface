buildscript {
    repositories { jcenter() }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'eclipse'
apply plugin: 'idea'

group = 'sg.ncl'
version = '0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir('src/test-integration/java')
        }
        resources {
            srcDir('src/test-integration/resources')
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

repositories {
    jcenter()
}

dependencies {
    compile project(':common-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('javax.inject:javax.inject:1')

    runtime('mysql:mysql-connector-java')

    testCompile('junit:junit')
    testCompile('org.hamcrest:hamcrest-library')
    testCompile('org.apache.commons:commons-lang3:3.4')

    integrationTestCompile('org.springframework.boot:spring-boot-starter-test')
    integrationTestCompile('com.h2database:h2')
}

task integrationTest(type: Test) {
    check.dependsOn integrationTest
    integrationTest.mustRunAfter test
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}
