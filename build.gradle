buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
    }
}
// settings for all projects
allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    group 'sg.ncl'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        jcenter()
    }

    dependencyManagement {
        dependencies {
//            dependencySet(group: 'org.hibernate', version: '5.1.0.Final') {
//                entry 'hibernate-core'
//                entry 'hibernate-entitymanager'
//            }
            dependency 'io.jsonwebtoken:jjwt:0.6.0'
        }

        imports {
            mavenBom 'io.spring.platform:platform-bom:2.0.5.RELEASE'
        }
    }

    tasks.withType(Test) {
        group 'verification'
        reports {
            html {
                destination = file("${reporting.baseDir}/${task.name}/html")
            }
        }
    }

    tasks.withType(TestReport) {
        group 'reporting'
    }

    tasks.withType(JacocoReport) {
        group 'reporting'
    }
}

configure(subprojects.findAll({ it.name.startsWith('service-') })) {
    apply plugin: 'spring-boot'

    sourceSets {
        integrationTest {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output

            java {
                srcDir('src/test-integration/java')
            }

            resources {
                srcDir('src/test-integration/resources')
            }
        }
    }

    configurations {
        integrationTestCompile {
            extendsFrom testCompile
        }
        integrationTestRuntime {
            extendsFrom testRuntime
        }
    }

    idea {
        module {
            testSourceDirs += sourceSets.integrationTest.java.srcDirs
            testSourceDirs += sourceSets.integrationTest.resources.srcDirs
        }
    }

    task integrationTest(type: Test) {
        group 'verification'
        check {
            dependsOn integrationTest
        }
        testClassesDir = sourceSets.integrationTest.output.classesDir
        classpath = sourceSets.integrationTest.runtimeClasspath
    }

//    jacocoTestReport {
//        dependsOn check
//        executionData test, integrationTest
//    }

    task testReport(type: TestReport) {
        group 'reporting'
        dependsOn test, integrationTest
        destinationDir = file("${reporting.baseDir}/unified/html")
        reportOn test, integrationTest
    }

    tasks.withType(JacocoReport) {
        executionData test, integrationTest
    }
}

apply plugin: 'spring-boot'

version '1.0-SNAPSHOT'

dependencies {
    // the only compile dependencies needed here are the services projects;
    // there should be no other compile dependencies
    compile subprojects.findAll({ it.name.startsWith('service-') })
    // the runtime dependencies should be a union of all runtime dependencies needed by all subprojects
    runtime 'mysql:mysql-connector-java'
}

jacocoTestReport {
    dependsOn subprojects.jacocoTestReport
    executionData test,
            subprojects.test,
            subprojects.findAll({ it.name.startsWith('service-') }).integrationTest
}

task testReport(type: TestReport) {
    dependsOn test,
            subprojects.test,
            subprojects.findAll({ it.name.startsWith('service-') }).testReport
    destinationDir = file("${reporting.baseDir}/unified/html")
    reportOn subprojects.test,
            subprojects.findAll({ it.name.startsWith('service-') }).integrationTest
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}
